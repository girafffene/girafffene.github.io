{"version":3,"sources":["assets/WeTube.png","assets/irene.jpeg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","src","Irene","alt","href","target","rel","WeTube","id","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kHAAAA,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,qOC6G5BC,MA1Ff,WACE,OACE,yBAAKC,UAAU,WACb,4BAAQA,UAAU,UAChB,yBAAKC,IAAKC,IAAOF,UAAU,YAAYG,IAAI,UAE3C,yBAAKH,UAAU,cACb,6CAEE,uBAAGI,KAAK,gCAAgCC,OAAO,SAASC,IAAI,uBAC1D,kBAAC,IAAD,CAAaN,UAAU,SAGzB,6BANF,4BAcF,uBAAGA,UAAU,QAAQI,KAAK,mCAAmCE,IAAI,uBAC/D,2BACE,kBAAC,IAAD,CAASN,UAAU,UADrB,+BAKF,uBAAGA,UAAU,SACX,kBAAC,IAAD,CAAcA,UAAU,UAD1B,OACuC,kBAAC,IAAD,CAAOA,UAAU,UADxD,MACqE,kBAAC,IAAD,CAAOA,UAAU,UADtF,QAIA,uBAAGA,UAAU,WAAWI,KAAK,qDAAqDC,OAAO,SAASC,IAAI,uBACpG,2BACE,kBAAC,IAAD,CAAYN,UAAU,UADxB,2BAKF,uBAAGA,UAAU,SAASI,KAAK,0CAA0CC,OAAO,SAASC,IAAI,uBACvF,2BACE,kBAAC,IAAD,CAAYN,UAAU,UADxB,aAMJ,yBAAKA,UAAU,SACb,wCACA,uBAAGA,UAAU,SAAb,6gBAKF,yBAAKA,UAAU,YACb,wCAEA,wBAAIA,UAAU,iBACZ,kBAAC,IAAD,CAAUA,UAAU,UADtB,OAGE,4BACE,uBAAGI,KAAK,uDAAuDC,OAAO,SAASC,IAAI,uBAAnF,YAMJ,yBAAKN,UAAU,SAASC,IAAKM,IAAQJ,IAAI,sBAEzC,uBAAGH,UAAU,aAAb,0GAEE,iDAIA,6BANF,8FAYF,gCACE,kBAAC,IAAD,CAASQ,GAAG,UACZ,kBAAC,IAAD,CAAaA,GAAG,SAChB,kBAAC,IAAD,CAAWA,GAAG,QACd,kBAAC,IAAD,CAAkBA,GAAG,OACrB,kBAAC,IAAD,CAAUA,GAAG,YC1FDC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.5adf0be4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/WeTube.e7ff1468.png\";","module.exports = __webpack_public_path__ + \"static/media/irene.24dce26f.jpeg\";","import React from 'react';\n\n//imported stylesheet\nimport './styles/App.css';\n\n//beginning of imported icons\nimport { FaGithubAlt, FaLinkedin, FaReact, FaCss3Alt, FaNodeJs } from \"react-icons/fa\"\nimport { IoIosPaper, IoLogoHtml5, IoLogoJavascript } from \"react-icons/io\"\nimport { MdEmail } from \"react-icons/md\"\nimport { FiSmartphone } from \"react-icons/fi\"\nimport { BsDot, BsPuzzle } from \"react-icons/bs\"\n//end of imported icons\n\n//beginning of imported images\nimport WeTube from \"./assets/WeTube.png\"\nimport Irene from \"./assets/irene.jpeg\"\n//end of imported images\n\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <header className=\"header\">\n        <img src={Irene} className=\"pic-irene\" alt=\"Irene\" />\n\n        <div className=\"name-title\">\n          <p>\n            Irene Perez&nbsp;\n            <a href=\"https://github.com/girafffene\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <FaGithubAlt className=\"git\"/>\n            </a>\n\n            <br/>\n\n            Front-End Web Developer\n          </p>\n          \n\n        </div>\n\n        <a className=\"email\" href=\"mailto:inreallifeirene@gmail.com\" rel=\"noopener noreferrer\">\n          <p>\n            <MdEmail className=\"icons\" /> inreallifeirene@gmail.com\n          </p>\n        </a>\n\n        <p className=\"phone\">\n          <FiSmartphone className=\"icons\"/> 702<BsDot className=\"icons\" />793<BsDot className=\"icons\" />6054\n        </p>\n\n        <a className=\"linkedin\" href=\"https://www.linkedin.com/in/irene-perez-a65682154/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <p>\n            <FaLinkedin className=\"icons\" /> irene-perez-a65682154\n          </p>\n        </a>\n\n        <a className=\"resume\" href=\"https://demoday.punchcode.org/student/5\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <p>\n            <IoIosPaper className=\"icons\"/> Resume\n          </p>\n        </a>\n      </header>\n\n      <div className=\"about\">\n        <h4>About Me</h4>\n        <p className=\"bio-p\">\n          My name is Irene Perez, I am a passionate frontend web developer always looking for new opportunities and experiences! My works utilize many languages however I specialize in JavaScript, React.js, HTML5, CSS3 and Node.js to develop beautiful web applications. My journey started at PunchCode, an immersive full-time 12 week coding school in Las Vegas, Nevada where it teaches students the fundamentals for a Junior Full Stack Web Developer position. Feel free to contact me if you would like to do any projects together!\n        </p>\n      </div>\n\n      <div className=\"projects\">\n        <h4>Projects</h4>\n\n        <h5 className=\"project-title\">\n          <BsPuzzle className=\"icons\" />\n          &nbsp;\n          <em>\n            <a href=\"https://github.com/girafffene/Group-Project___WeTube\" target=\"_blank\" rel=\"noopener noreferrer\">\n              WeTube\n            </a>\n          </em>\n        </h5>\n\n        <img className=\"weTube\" src={WeTube} alt=\"wetube screenshot\" />\n\n        <p className=\"project-p\">\n          Created a website that allows users to get together and watch YouTube videos without the need for a&nbsp;\n          <em>\n            \"1, 2, 3, START!\"\n          </em>\n\n          <br/>\n\n          With WeTube, we offer synchronyzed playback and a chat feature so you never miss a thing.\n        </p>\n      </div>\n\n      <footer>\n        <FaReact id=\"react\"/>\n        <IoLogoHtml5 id=\"html\" />\n        <FaCss3Alt id=\"css\" />\n        <IoLogoJavascript id=\"js\" />\n        <FaNodeJs id=\"node\"/>\n      </footer>\n        \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}